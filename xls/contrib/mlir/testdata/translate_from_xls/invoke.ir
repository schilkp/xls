// RUN: xls_translate --xls-to-mlir-xls %s 2>&1 | FileCheck %s

package translate_ops

file_number 0 "./invoke.x"

// CHECK: func @__invoke__bar([[ARG1:%.*]]: i32) -> i32 {
fn __invoke__bar(a: bits[32] id=1) -> bits[32] {

  // CHECK: [[LITERAL1:%.*]] = "xls.constant_scalar"() <{value = 42 : i32}> : () -> i32
  literal.2: bits[32] = literal(value=42, id=2)

  // CHECK: %{{.*}} = xls.add [[LITERAL1]], [[ARG1]] : i32
  ret add.3: bits[32] = add(literal.2, a, id=3)
}

// CHECK: func.func @__invoke__foo() -> i32 {
fn __invoke__foo() -> bits[32] {

  // CHECK: [[LITERAL2:%.*]] = "xls.constant_scalar"() <{value = 10 : i32}> : () -> i32
  a: bits[32] = literal(value=10, id=4)

  // CHECK: %{{.*}} = call @__invoke__bar([[LITERAL2]]) : (i32) -> i32
  ret invoke.5: bits[32] = invoke(a, to_apply=__invoke__bar, id=5)
}
